package com.fudian.szhjg.controller;

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.fudian.common.pojo.CommonGridResult;
import com.fudian.szhjg.mapper.TTaskJuanMapper;
import com.fudian.szhjg.mapper.TTaskPieceMapper;
import com.fudian.szhjg.pojo.TTaskJuan;
import com.fudian.szhjg.pojo.TTaskPiece;
import com.fudian.szhjg.service.TTaskJuanService;
import com.fudian.szhjg.service.TTaskPieceService;
import com.fudian.szhjg.templateMode.CommonTemplate;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;


@Api(tags = "A37  数据加工-数据质检")
@RestController
@RequestMapping("/sjjg/sjzj")
public class GxSjzjController {

    @Autowired
    private TTaskJuanService tTaskJuanService;
    @Autowired
    private TTaskJuanMapper tTaskJuanMapper;

    @Autowired
    private TTaskPieceService tTaskPieceService;
    @Autowired
    private TTaskPieceMapper tTaskPieceMapper;

    /**查询案卷信息
     * 2023-02-23
     * @param tTaskJuan
     * @return
     */
    @ApiOperation("查询案卷信息")
    @GetMapping("/queryDirectory")
    @ResponseBody
    public CommonGridResult queryDirectory(TTaskJuan tTaskJuan){
        CommonTemplate commonTemplate = new CommonTemplate(tTaskJuan,tTaskJuanService,tTaskJuanMapper);
        LambdaQueryWrapper<TTaskJuan> wrapper = new LambdaQueryWrapper<>();
        if (StringUtils.isNotBlank(tTaskJuan.getPcId())){
            wrapper.eq(TTaskJuan::getPcId,tTaskJuan.getPcId());
        }
        if (StringUtils.isNotBlank(tTaskJuan.getDh())){
            wrapper.like(TTaskJuan::getDh,tTaskJuan.getDh());
        }
        wrapper.eq(TTaskJuan::getDqgx,"8").ne(TTaskJuan::getRwzt,"已完成");
        wrapper.orderByDesc(TTaskJuan::getRwzt).orderByAsc(TTaskJuan::getDalx,TTaskJuan::getQzh,TTaskJuan::getMlh,TTaskJuan::getAjh);
        CommonGridResult commonGridResult = commonTemplate.list(wrapper);
        return commonGridResult;
    }

    /**查询案件信息
     * 2023-02-23
     * @param tTaskPiece
     * @return
     */
    @ApiOperation("查询案件信息")
    @GetMapping("/queryCasePiece")
    @ResponseBody
    public CommonGridResult queryCasePiece(TTaskPiece tTaskPiece){
        CommonTemplate commonTemplate = new CommonTemplate(tTaskPiece,tTaskPieceService,tTaskPieceMapper);
        LambdaQueryWrapper<TTaskPiece> wrapper = new LambdaQueryWrapper<>();
        wrapper.eq(TTaskPiece::getAjId,tTaskPiece.getAjId()).eq(TTaskPiece::getSfsy,"是");
        wrapper.orderByAsc(TTaskPiece::getYm);
        CommonGridResult commonGridResult = commonTemplate.list(wrapper);
        return commonGridResult;
    }

}
