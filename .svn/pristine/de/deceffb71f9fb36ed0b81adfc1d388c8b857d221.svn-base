<template>
  <div>
    <el-dialog title="抽检" width="90%" :visible.sync="dialogFormVisible" :close-on-click-modal="false"
               class="dialog-style dialog-basic" :close-on-press-escape="false" :before-close="beforeClose">
      <el-form :model="queryForm" ref="queryForm" size="small" :inline="true" style="margin-top:5px;margin-bottom:0;">
        <el-form-item label="选择批次">
          <el-cascader v-model="queryForm.pcId" :options="projectOptions" :props="projectProps" clearable size="mini"
                       filterable :show-all-levels="false" ></el-cascader>
        </el-form-item>
        <el-form-item label="全宗号">
          <el-input v-model="queryForm.qzh" clearable style="width: 100px" class="rt-input" size="mini"/>
        </el-form-item>
        <el-form-item label="案卷号">
          <el-input v-model="queryForm.ajh" clearable style="width: 100px" class="rt-input" size="mini"/>
        </el-form-item>
        <el-form-item label="档号">
          <el-input v-model="queryForm.dh" clearable style="width: 200px" class="rt-input" size="mini"/>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" icon="el-icon-search" size="mini" @click="toSearch">搜索</el-button>
        </el-form-item>
        <!--        <el-form-item>-->
        <!--          <el-button type="primary" icon="el-icon-search" size="mini" @click="">导出Excel</el-button>-->
        <!--        </el-form-item>-->
        <el-form-item>
          <el-button type="primary" icon="el-icon-search" size="mini" @click="fallBack">回退</el-button>
        </el-form-item>
      </el-form>
      <el-table v-loading="loading" :data="dataList.rows" border height="calc(100vh - 200px)" ref="historyTable"
                @row-click="RowClick" @selection-change="selectionChange" @select="toSelect" :row-style="checkClass"
                highlight-current-row>
        <el-table-column type="selection" width="40"></el-table-column>
        <el-table-column align="center" type="index" label="序号" width="50"></el-table-column>
        <el-table-column align="center" v-for="(item,index) in FrameColumns" :key="index" :label="item.label"
                         :prop="item.prop" :min-width="item.width" show-overflow-tooltip :formatter="item.formatter"
                         :v-if="FrameColumns[index].isCol">
        </el-table-column>
      </el-table>
      <div class="page">
        <el-pagination :page-sizes="[20, 30, 50, 100]" :page-size="queryForm.pageSize" :current-page="queryForm.pageNum"
                       :total="total"
                       layout="total, sizes, prev, pager, next, jumper" @size-change="pageSizeChange" :pager-count="5"
                       @current-change="pageCurrent"/>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import {getFallBack, historyList, querySamplingTime} from "@/api/szhjg/check/history";
import {completeProjectBatch} from "@/api/szhjg/check/spotCheckTask";

export default {
  name: "index",
  data() {
    return {
      dialogFormVisible: false,
      loading: true,
      dataList: [],
      total: 0,
      queryForm: {
        pcId: '',
        qzh: '',
        ajh: '',
        dh: '',
        pageNum: 1,
        pageSize: 20,
      },
      projectOptions: [],
      projectProps: {label: 'projectName', value: 'benId', children: 'pcName',emitPath:false},
      FrameColumns: [
        {label: '档案类型', prop: 'dalx', isCol: true , width: '100'},
        {label: '全宗号', prop: 'qzh', width: '100'},
        {label: '目录号', prop: 'mlh', width: '100'},
        {label: '案卷号', prop: 'ajh', width: '100'},
        {label: '案卷提名', prop: 'ajtm', width: '100'},
        {label: '全宗题名', prop: 'qzmc', width: '80'},
        {label: '起止年月', prop: 'startEndDate', isCol: true, width: '150'},
        /*{label: '档案馆代码', prop: 'dagdm', width: '80'},
        {label: '档案馆名称', prop: 'dagmc', width: '80'},*/
        {label: '保管期限', prop: 'bgqx', width: '100'},
        {label: '原案卷号', prop: 'oajh', width: '150'},
        {label: '附注', prop: 'fz', width: '120'},
        {label: '备考表说明', prop: 'bkbsm', width: '200'},
        {label: '档号区间', prop: 'dh', isCol: true, width: '190'},
        {label: '姓名', prop: 'xm', isCol: true, width: '80'},
        {label: '性别', prop: 'xb', isCol: true, width: '50'},
        {label: '证件类型', prop: 'zjlx', isCol: true, width: '100'},
        {label: '证件号码', prop: 'zjhm', isCol: true, width: '160'},
        {label: '案卷总件数', prop: 'fileCount', width: '100'},
        /*{label: '页数', prop: 'ys', width: '100'},*/
        {label: '领取时间', prop: 'aTime', width: '150', formatter: this.SamplingOptions1},
        {label: '完成时间', prop: 'bTime', width: '150', formatter: this.SamplingOptions2},
      ],
      GridCheck: [],
      seleData: null,

      optionsSamplingTime: [],
    }
  },
  created() {
  },
  methods: {
    getHistory() {
      historyList(this.queryForm).then((res) => {
        this.dataList = res
        this.total = res.total
        this.loading = false
      })
    },
    async toSelect(selection, row) {
      // 执行完清空操作在进行下面的勾选
      await this.$refs.historyTable.clearSelection();
      if (selection.length === 0) return;
      this.$refs.historyTable.toggleRowSelection(row, true);
    },
    //行点击事件
    RowClick(row, column) {
      this.$refs.historyTable.clearSelection();
      this.seleData = row
      if (this.GridCheck.length === 0) {
        this.$refs.historyTable.toggleRowSelection(row)
        return;
      }
      this.$refs.historyTable.toggleRowSelection(row)
    },
    //复选框事件
    selectionChange(val) {
      this.GridCheck = val;
    },
    checkClass({row, rowIndex}) {
      if (this.GridCheck.includes(row)) {
        return {
          "background": "#b9deff !important", "color": "blue",
        }
      } else {
        return {
          "——tablebackground": "#F5F7FA",
        }
      }
    },
    pageSizeChange(val) {
      this.queryForm.pageSize = val
      this.getHistory()
    },
    //分页
    pageCurrent(val) {
      this.queryForm.pageNum = val
      this.getHistory()
    },
    toSearch() {
      this.getHistory()
    },
    fallBack() {
      if (this.seleData == null) {
        this.$message.warning('请先选择一条数据')
      } else {
        getFallBack({id: this.seleData.id}).then((res) => {
          if (res.code == 200) {
            this.getHistory()
            this.$message.success(res.msg)
          } else {
            this.$message.success(res.msg)
          }
        })
      }
    },
    //查询项目批次
    queryOptions() {
      completeProjectBatch().then((res) => {
        this.projectOptions = res.data;
      })
    },
    //查询抽检时间
    samplingTimeList() {
      querySamplingTime().then(res => {
        this.optionsSamplingTime = res.map((item) => {
          return item;
        });
      })
    },
    //转换时间
    SamplingOptions1(row, column, cellValue) {
      let result;
      cellValue = row.id;
      const arr = this.optionsSamplingTime;
      for (var i in arr) {
        if (cellValue == arr[i].value) {
          result = arr[i].label1;
        }
      }
      return result;
    },
    SamplingOptions2(row, column, cellValue) {
      let result;
      cellValue = row.id;
      const arr = this.optionsSamplingTime;
      for (var i in arr) {
        if (cellValue == arr[i].value) {
          result = arr[i].label2;
        }
      }
      return result;
    },


    //关闭页面弹窗
    beforeClose() {
      this.dialogFormVisible = false;
      this.$emit("HistoryCloseData", "刷新");
    },
  }
}
</script>

<style lang="scss" scoped>

.page {
  margin-top: 5px;
  text-align: right;
}

::v-deep .el-table {
  border-right: 1px solid #dfe6ec;
  color: #515a6e;

  & > .el-table__header-wrapper {
    & > table {
      tr:first-of-type {
        th {
          background: rgba(204, 204, 204, 0.18);
          color: #515a6e;
          font-size: 12px;
          //text-align: center;
          height: 34px !important;
          padding: 5px 0 !important;
        }
      }

      tr:nth-of-type(2) {
        th {
          background: #fff;
          //background: rgba(204, 204, 204, 0.05);
          color: #515a6e;
          font-size: 12px;
          text-align: center;
          padding: 0 !important;
          height: 34px;

          .el-input__inner {
            border: none;
            padding: 0;
            height: 20px;
          }
        }
      }

      & > colgroup {
        col {
          &:last-of-type {
            width: 17px !important;
          }
        }
      }
    }
  }

  .el-table__body-wrapper {
    overflow: auto !important;
    //border-right: 1px solid #dfe6ec;
    //width: calc(100% - 1px);
    .el-table__row {
      td {
        text-align: center;
        font-size: 12px;
        padding: 5px 0 !important;

        &:last-child {
          .cell {
            display: flex;
            //margin: 0 5px;
            //flex-direction: column;
            justify-content: space-around;
            width: 100%;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            //padding: 0;
            .el-button {
              width: 100%;
              height: 100%;
              position: relative;
              top: 0;
              right: 0;
              //padding: 0;
              margin: 0 2px;
              //span{
              //  display: inline-block;
              //  height: 100%;
              //}
            }
          }
        }
      }
    }
  }

  //滚动条
  /**滚动条的宽度*/
  ::-webkit-scrollbar {
    width: 10px !important; /*竖向*/
    height: 10px !important; /*横向*/
  }

  /*滚动条的滑块*/
  ::-webkit-scrollbar-thumb {
    background-color: #ddd !important;
    border-radius: 8px !important;
  }
}

::v-deep .el-table tbody tr:hover > td {
  background: var(--tablebackground) !important;
}

//表格鼠标悬浮时的样式 （高亮）
::v-deep {
  .el-table--enable-row-hover {
    .el-table__body tr {
      &:hover {
        background: rgb(223 239 253);
        border: 1px solid #313463;
      }
    }
  }
}

//弹框样式
.dialog-style {
  ::v-deep .el-dialog__body {
    padding: 5px;
  }

  ::v-deep .el-dialog__header {
    background: rgba(204, 204, 204, 0.18);
    padding: 10px;
  }

  ::v-deep .el-dialog__title {
    font-weight: 500;
    font-size: 15px
  }

  ::v-deep .el-dialog__headerbtn {
    top: 13px;
  }

  ::v-deep .el-dialog__footer {
    background: rgba(204, 204, 204, 0.18);
    padding-right: 15px;
    padding: 8px;
  }

  ::v-deep .el-button + .el-button {
    margin-left: 6px;
  }
}

// 基本信息弹框
.dialog-basic {
  margin-left: 10px;

  .form-basic {
    margin-bottom: 5px;
    line-height: 25px;
    border-bottom: 1px solid #ccc;
    //margin-left: 15px;
    //margin-right: 15px;
    font-size: 14px;
    font-weight: bold;
  }

  .form-imgs {
    position: relative;
    height: 100%;
    margin-bottom: 5px;
    line-height: 25px;
    border-bottom: 1px solid #ccc;
    font-size: 14px;
    font-weight: bold;

    .img-viewr__wrapper {
      position: absolute;
    }

    ::v-deep .icon__circle-close {
      display: none;
    }

    ::v-deep .img-viewr__canvas {
      overflow: hidden;
    }

    .imgs {
      display: flex;
    }

    .img {
      width: 150px;
      height: 100px;
      border: 1px solid #EEE;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 20px;
    }

    .img img {
      max-width: 100%;
      max-height: 100%;
      cursor: pointer;
    }
  }

}

//弹窗样式修改
::v-deep .el-dialog {
  display: flex;
  flex-direction: column;
  margin: 0 !important;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  max-height: calc(100% - 30px);
  max-width: calc(100% - 30px);
}
</style>
